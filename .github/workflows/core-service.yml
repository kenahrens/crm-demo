name: Core Service CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'core-service/**'
      - '.github/workflows/core-service.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'core-service/**'
      - '.github/workflows/core-service.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.24.1'
          cache: true
          cache-dependency-path: core-service/go.sum

      - name: Setup proxymock
        env:
          PROXYMOCK_API_KEY: ${{ secrets.PROXYMOCK_API_KEY }}
        run: |
          mkdir -p .speedscale
          curl -Lfs https://downloads.speedscale.com/proxymock/install-proxymock | sh
          echo "$HOME/.speedscale" >> $GITHUB_PATH
          $HOME/.speedscale/proxymock init --api-key "$PROXYMOCK_API_KEY"

      - name: Install dependencies
        run: cd core-service && go mod download

      - name: Build
        run: cd core-service && make build

      - name: Run unit tests
        run: cd core-service && go test -v ./...

      - name: Run integration tests
        run: cd core-service && make integration-test

      - name: Store test logs
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-logs
          path: core-service/logs/
          retention-days: 5

  docker:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/core-service
          tags: |
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./core-service
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }} 